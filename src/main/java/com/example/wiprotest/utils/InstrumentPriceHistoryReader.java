package com.example.wiprotest.utils;import com.example.wiprotest.model.InstrumentPriceHistory;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.text.ParseException;import java.util.List;import java.util.stream.Collectors;public class InstrumentPriceHistoryReader {	private static final int NAME_COLUMN_INDEX = 0;	private static final int DATE_COLUMN_INDEX = 1;	public static final int PRICE_COLUMN_INDEX = 2;	public static List<InstrumentPriceHistory> readHistoryLog(InputStream inputStream) throws IOException, ParseException {		try(BufferedReader reader =  new BufferedReader(new InputStreamReader(inputStream))) {			return reader.lines().map(line -> {				try {					return toInstrumentPriceHistory(line);				} catch (ParseException e) {					throw new RuntimeException(e);				}			}).collect(Collectors.toList());		}	}	static InstrumentPriceHistory toInstrumentPriceHistory(String line) throws ParseException {		String[] fields = line.split(",");		return new InstrumentPriceHistory(			fields[NAME_COLUMN_INDEX],			DateParser.parseDumpDate(fields[DATE_COLUMN_INDEX]),			Double.parseDouble(fields[PRICE_COLUMN_INDEX])		);	}}