package com.example.wiprotest.service.instruments;import com.example.wiprotest.model.CalculatedPrice;import com.example.wiprotest.model.InstrumentPriceHistory;import com.google.common.collect.ImmutableList;import org.junit.jupiter.api.Test;import java.text.ParseException;import java.util.List;import static com.example.wiprotest.utils.DateParser.parseDumpDate;import static org.junit.jupiter.api.Assertions.*;class Instrument2PriceCalculatorTest {	@Test	void calculate() throws ParseException {		/*		 * mean for November 2014		 */		// GIVEN		List<InstrumentPriceHistory> records = ImmutableList.<InstrumentPriceHistory>builder()			.add(new InstrumentPriceHistory("INSTRUMENT2", parseDumpDate("01-NOV-2014"), 0d))			.add(new InstrumentPriceHistory("INSTRUMENT2", parseDumpDate("02-NOV-2014"), 1d))			.add(new InstrumentPriceHistory("INSTRUMENT2", parseDumpDate("03-NOV-2014"), 2d))			// below values should be ignored as it is not from NOV 2014			.add(new InstrumentPriceHistory("INSTRUMENT2", parseDumpDate("04-NOV-2015"), 4d))			.add(new InstrumentPriceHistory("INSTRUMENT2", parseDumpDate("05-DEC-2014"), 5d))			.build();		Instrument2PriceCalculator calculator = new Instrument2PriceCalculator();		// WHEN		records.forEach(calculator::consume);		CalculatedPrice calculatedPrice = calculator.calculate();		// THEN		assertEquals(1d, calculatedPrice.calculatedPrice());	}	@Test	public void isNov2014() throws ParseException {		assertTrue(Instrument2PriceCalculator.isNov2014(parseDumpDate("01-NOV-2014")));		assertTrue(Instrument2PriceCalculator.isNov2014(parseDumpDate("28-NOV-2014")));		assertFalse(Instrument2PriceCalculator.isNov2014(parseDumpDate("01-OCT-2014")));		assertFalse(Instrument2PriceCalculator.isNov2014(parseDumpDate("01-OCT-2015")));	}}